name: Build Portable Windows Executable

on:
  push:
    branches: [main]

jobs:
  build-32bit:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
          architecture: 'x86'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install VC++ Redistributables
        shell: pwsh
        run: |
          # Download and install Visual C++ Redistributables
          $vc_installer_url = "https://aka.ms/vs/16/release/vc_redist.x86.exe"
          Invoke-WebRequest -Uri $vc_installer_url -OutFile "vc_redist.x86.exe"
          
          # Run the installer with quiet mode
          Start-Process -FilePath "vc_redist.x86.exe" -ArgumentList "/quiet", "/install" -Wait
          
          # Cleanup installer after installation
          Remove-Item -Force "vc_redist.x86.exe"

      - name: Debug Environment
        run: |
          python --version
          python -c "import platform; print(platform.architecture())"
          dir "C:\Windows\System32\api-ms-win-crt-*.dll"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Compile portable executable for x86
        shell: pwsh
        run: |
          $font_dir = python -c "import os, pyfiglet; print(os.path.join(os.path.dirname(pyfiglet.__file__), 'fonts'))"
          pyinstaller --onefile --add-data "$font_dir;pyfiglet/fonts" --add-binary ""C:\\Windows\\System32\\api-ms-win-crt-*.dll;."" --name email_toolkit_x86 run.py

      - name: Upload EXE as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: email_toolkit_x86
          path: dist/email_toolkit_x86.exe
  
  build-64bit:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
          architecture: 'x64'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install VC++ Redistributables
        shell: pwsh
        run: |
          # Download and install Visual C++ Redistributables
          $vc_installer_url = "https://aka.ms/vs/16/release/vc_redist.x64.exe"
          Invoke-WebRequest -Uri $vc_installer_url -OutFile "vc_redist.x64.exe"
          
          # Run the installer with quiet mode
          Start-Process -FilePath "vc_redist.x64.exe" -ArgumentList "/quiet", "/install" -Wait
          
          # Cleanup installer after installation
          Remove-Item -Force "vc_redist.x64.exe"

      - name: Install dependencies
        run: pip install -r requirements.txt


      - name: Compile portable executable for x64
        shell: pwsh
        run: |
          $font_dir = python -c "import os, pyfiglet; print(os.path.join(os.path.dirname(pyfiglet.__file__), 'fonts'))"
          pyinstaller --onefile --add-data "$font_dir;pyfiglet/fonts" --add-binary "C:\\hostedtoolcache\\windows\\Python\\3.12.7\\x64\\DLLs\\api-ms-win-crt-*;." --name email_toolkit_x64 run.py

      - name: Upload EXE as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: email_toolkit_x64
          path: dist/email_toolkit_x64.exe